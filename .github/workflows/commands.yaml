name: commands

on: [issue_comment]

permissions:
  contents: write
  pull-requests: write

jobs:
  test-e2e:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.comment.body, '/ok-to-test') && github.event.issue.pull_request }}
    steps:
      - uses: actions/checkout@v2
      - env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr checkout ${{ github.event.issue.number }}
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache: false
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true
      - run: |
          pip install poetry
          poetry install
      - uses: helm/kind-action@v1
        with:
          cluster_name: e2e
      - uses: docker/build-push-action@v5
        with:
          tags: lke-operator:e2e
          build-args: VERSION=e2e
      - run: |
          kind load docker-image --name=e2e lke-operator:e2e
          kubectl create namespace test-shared
          kubectl create secret generic \
            --namespace=test-shared \
            --from-literal='LINODE_TOKEN=${{ secrets.LINODE_TOKEN }}' \
            test-token
      - run: |
          make install deploy IMG=lke-operator:e2e
      - run: |
          make test-e2e CHAINSAW_ARGS='--report-format=XML'
        id: e2e
        continue-on-error: true
      - run: |
          {
            echo 'markdown<<EOF'
            poetry run report
            echo 'EOF'
          } >> "${GITHUB_OUTPUT}"
        id: report
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: ${{ steps.report.outputs.markdown }}
          number: ${{ github.event.issue.number }}
